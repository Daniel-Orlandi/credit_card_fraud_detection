version: '3.8'
services:
   postgres-init:
    image: postgres:14
    volumes:
      - "postgres_data:/data"
    entrypoint:
      - sh
      - -c
      - |
        chown -R 2000:2000 /data

   postgres-compose:
    container_name: credit_card_db
    depends_on:
      postgres-init:
        condition: service_completed_successfully
    image: postgres
    env_file:
      - .env      
    environment:
      POSTGRES_USER: ${USER_POSTGRES}
      POSTGRES_PASSWORD: ${PWD_POSTGRES}
      POSTGRES_DB: ${DATABASE_POSTGRES}
      PGDATA: /pgdata
    ports:
      - "15432:5432"
    volumes:
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - "postgres_data:/pgdata"
    user: "2000"
    networks:
      - postgres-compose-network

   pgadmin-compose:
      image: dpage/pgadmin4
      environment:
         PGADMIN_DEFAULT_EMAIL: ${EMAIL_PGADMIN}
         PGADMIN_DEFAULT_PASSWORD: ${PWD_PGADMIN}
      ports:
         - "16543:80"
      depends_on:
         - postgres-compose
      networks:
         - postgres-compose-network     
         
   app-gpu:
     build: 
        context: .
        dockerfile: Dockerfile     
     image: tensorflow-gpu
     container_name: tensorflow-gpu
     env_file:
      - .env     
     links:
            - "postgres-compose"       
     ports:
            - "8888:8888"
     deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]
     volumes:
      - ./app:/usr/src/app
     # mantém o container aberto, se o mesmo não executa um script
     tty: true

networks:
   postgres-compose-network:
      driver: bridge

volumes:
  postgres_data:

